# docker-compose.override.yml - Development overrides
# This file is automatically loaded by docker-compose and overrides values in docker-compose.yml
# Use this for local development settings that shouldn't be in the main file

services:
  frontend:
    environment:
      # Enable React DevTools
      - REACT_DEVTOOLS=true
      # Increase file watcher limit for hot reload
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
    # Mount source code for live editing
    volumes:
      - ./tsconfig.base.json:/app/tsconfig.base.json:ro
      - ./.eslintrc.cjs:/app/.eslintrc.cjs:ro
      - ./.prettierrc.json:/app/.prettierrc.json:ro

  backend:
    environment:
      # Enable verbose logging in development
      - LOG_LEVEL=debug
      # Disable rate limiting in development
      - DISABLE_RATE_LIMIT=true
      # Enable GraphQL playground
      - GRAPHQL_PLAYGROUND=true
    # Additional development tools
    volumes:
      - ./tsconfig.base.json:/app/tsconfig.base.json:ro
      - ./.eslintrc.cjs:/app/.eslintrc.cjs:ro
      - ./.prettierrc.json:/app/.prettierrc.json:ro

  worker:
    environment:
      # Enable verbose logging for debugging
      - LOG_LEVEL=debug
      # Reduce concurrency for easier debugging
      - WORKER_CONCURRENCY=2
      # Enable job inspection
      - ENABLE_JOB_INSPECTION=true
    volumes:
      - ./tsconfig.base.json:/app/tsconfig.base.json:ro
      - ./.eslintrc.cjs:/app/.eslintrc.cjs:ro
      - ./.prettierrc.json:/app/.prettierrc.json:ro

  # MongoDB Express - Database UI (development only)
  mongo-express:
    image: mongo-express:latest
    container_name: procurement-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongodb:27017/
      - ME_CONFIG_BASICAUTH=false
    networks:
      - procurement-network
    depends_on:
      - mongodb
    profiles:
      - dev-tools

  # Redis Commander - Redis UI (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: procurement-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - procurement-network
    depends_on:
      - redis
    profiles:
      - dev-tools

  # Mailhog - Email testing (development only)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: procurement-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - procurement-network
    profiles:
      - dev-tools